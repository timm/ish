(unless (fboundp 'establish) (load "../ish/ish.lisp"))

(establish
  "test"
  "rand"
  "ranges"
  "pima_diabetes"
)

(defstruct emp name age showsize)

(deftest _ranges () 
  "some"
  (reset-seed 1)
  (let ((lst (loop for _ upto 20000 
                   collect (make-emp :age (* 0.01 
                              (round (expt (randf) 2) 0.01))))))
    (dolist (one (ranges lst :cohen 0.2 :x #'emp-age))
      (format t "~a "   (length one)))
 )
)
(deftest _data1 ()
  "daa"
  (print 1000)
  (let ((tbl (pima_diabetes)))
    (dolist (col (num! tbl))
      (labels ((x (row) (cell row col)))
        (multiple-value-bind (bins epsilon)
          (ranges (? tbl rows) :x #'x )
          (format t "~%~a ~5,2f~%" (? col name) epsilon)
          (dolist (bin  bins)
             (format t "~a ~a ~%" (length bin) (mapcar #'x bin))
             ))))))

(defun rangeDemo (lst)
  (multiple-value-bind (bins epsilon)
    (ranges lst :n 20)
    (print epsilon)
    (dolist (one (ranges lst ))
      (format t "#~a ~a .. ~a~%"   
              (length one) (first one) (tail one)))))

(deftest _r1 ()
  "test1"
   (rangeDemo
    '(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
                0.3 1.
                3.4 7 7 7.9 8 8 10 10 10 10 10 11 11 11 11 11 11 11.8 12 12 12 12
                12 12 12 13 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 15 15
                15 15 15 15 15 15 15 15 15 15 15 15 16 16 16 16 16 16 16.0 17 17
                17 17 17 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18
                18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 19
                19 19 19 19 19 19 19.4 20 20 20 20 20 20 20 20 20 20 20 20 20 21
                21 21 21 21 21 21 21 21 21 22 22 22 22 22 22 22 22 22 22 22 22 22
                22 22 22 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
                23 23 23 24 24 24 24 24 24 24 24 24 24 24 24 25 25 25 25 25 25 25
                25 25 25 25 25 25 25 25 25 26 26 26 26 26 26 26 26 26 26 26 26 26
                26 26 26 27 27 27 27 27 27 27 27 27 27 27 27 27 27 27 27 27 27 27
                27 27 27 27 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28 28
                28 28 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 30 30 30
                30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
                30 30 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 32
                32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32
                32 32 32 32 32 32 32 32 32.0 33 33 33 33 33 33 33 33 33 33 33 33
                33 33 33 33 33 33 33 33 34 34 34 34 34 34 34 34 35 35 35 35 35 35
                35 35 35 35 35 35 35 35 35 36 36 36 36 36 36 36 36 36 36 36 36 36
                36 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 37 38 38 38 38 38
                38 38 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 40 40
                40 40 40 40 40 40 40 40 40 40 40 40 40 40 41 41 41 41 41 41 41 41
                41 41 41 41 41 41 41 42 42 42 42 42 42 42 42 42 42 42 43 43 43 43
                43 43 44 44 44 44 44 45 45 45 45 45 45 46 46 46 46 46 46 46 46 47
                47 47 47 48 48 48 48 49 49 49 50 50 50 51 52 52 54 54 56 60 63 99
                115.2 576)))

(deftest _r3 ()
  "test3"
  (rangeDemo 
    '(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      0 0 0 0 0 0 0 0 0 0 0 
      9 14 15 16 18 18 22 23 23 25 29 32 36 36 36 37 37 38 40 40 41 42
      43 44 44 44 45 45 45 46 48 48 48 49 49 49 49 49 50 50 50 51 52 53
      53 54 54 54 54 55 55 56 56 56 56 56 57 57 58 58 59 60 60 61 63 63
      63 64 64 64 64 65 66 66 66 66 66 67 67 68 70 70 70 71 71 71 71 72
      73 74 74 74 75 75 75 76 76 76 76 76 77 77 78 78 79 79 81 82 82 82
      83 83 83 84 85 85 86 87 87 88 88 88 88 89 90 90 90 90 91 92 92 92
      94 94 94 94 94 94 94 95 95 96 96 99 99 100 100 100 100 100 100 100
      105 105 105 105 105 105 105 105 105 105 105 106 106 106 108 110 110
      110 110 110 110 112 114 114 115 115 115 115 115 115 116 116 119 120
      120 120 120 120 120 120 120 122 122 125 125 125 125 126 126 126 127
      128 129 130 130 130 130 130 130 130 130 130 132 132 135 135 135 135
      135 135 140 140 140 140 140 140 140 140 140 142 144 144 145 145 145
      146 148 148 150 150 152 152 155 155 155 155 156 156 156 158 158 159
      160 160 160 160 165 165 165 165 166 167 167 168 168 168 168 170 170
      171 175 175 175 176 176 176 178 180 180 180 180 180 180 180 182 182
      182 183 184 185 185 188 190 190 190 190 191 192 192 193 194 194 194
      196 200 200 200 200 204 205 205 207 207 210 210 210 210 210 215 215
      215 220 220 225 225 228 230 230 231 231 235 237 240 240 245 249 250
      255 258 265 265 270 271 272 274 275 277 278 280 284 285 285 291 293
      293 300 304 310 318 321 325 325 325 326 328 330 335 342 360 370 375
      387 392 402 415 440 465 474 478 480 480 485 495 495 510 540 543 545
      579 600 680 744 846 )))

(tests)
